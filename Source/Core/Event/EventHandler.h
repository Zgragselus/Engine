///////////////////////////////////////////////////////////////////////////////////////////////////
//
// EventHandler.h
//
// Following file defines tiny event handler class
// 
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Created by: Vilem Otte <vilem.otte@post.cz>
//
// Log:
// - Initial file created
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __EVENT_HANDLER_H__
#define __EVENT_HANDLER_H__

///////////////////////////////////////////////////////////////////////////////////////////////////
// Class & Structures definition

namespace Engine
{
	/// <summary>Forward declaration of EventDispatcher</summary>
	template <class> class EventDispatcher;

	/// <summary>EventHandler class</summary>
	template <class tEvent>
	class EventHandler
	{
	private:
		friend class EventDispatcher<tEvent>;

		/// <summary>Handle method for given event type</summary>
		/// <param name="object">Event object for which method is fired</summary>
		virtual void Handle(const tEvent& object) = 0;
	};
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// EOH

#endif
