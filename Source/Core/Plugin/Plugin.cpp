///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Plugin.cpp
//
// Class for run-time dynamic linking - loading and unloading libraries, and getting pointers to 
// their functions
// 
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Created by: Vilem Otte <vilem.otte@post.cz>
//
// Log:
// - Initial file created
//
///////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////
// Header section

#include "Plugin.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
// Declaration section

using namespace Engine;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Definition section

/// <summary>
/// Constructor, gets handle to the Dll (loads Dll if necessary)
/// </summary>
/// <param name="filename">Path to Dll file</param>
Plugin::Plugin(const std::string& filename)
{
	mDllHandle = LoadLibrary(filename.c_str());
}

/// <summary>
/// De-references the Dll (unloads if possible)
/// </summary>
Plugin::~Plugin()
{
	FreeLibrary(mDllHandle);
}