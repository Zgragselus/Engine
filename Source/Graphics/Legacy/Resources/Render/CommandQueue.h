///////////////////////////////////////////////////////////////////////////////////////////////////
//
// CommandQueue.h
//
// Command queue is a container structure for renderer that holds information about how to render
// a frame. It can on the fly optimize order of rendering to achieve higher performance.
// 
///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Created by: Vilem Otte <vilem.otte@post.cz>
//
// Log:
// - Initial file created
//
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __COMMAND_QUEUE__H__
#define __COMMAND_QUEUE__H__

///////////////////////////////////////////////////////////////////////////////////////////////////
// Header section

#include "CommandItem.h"

///////////////////////////////////////////////////////////////////////////////////////////////////
// Class & Structures definition

namespace Engine
{
	/// <summary>
	/// Material class stands in between the shader and actual geometry that is rendered. Its main 
	/// purpose is to set up all the uniforms during the rendering.
	/// </summary>
	class CommandQueue
	{
	protected:
		std::vector<CommandItem> mQueue;

	public:
		ALIGNED_NEW_DELETE("Engine::Graphics::CommandQueue")
	};
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// EOH

#endif
